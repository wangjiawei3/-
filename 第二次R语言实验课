
#问题1：
#3-1、分别是整数型、浮点型、复数型
#3-2、用levels()函数:levels(factor)
#3-3、as.numeric(6.283185)
#3-4、View()函数、edit()函数、fix()函数
#3-5、用rm()函数:rm(list=())
————————————————————————————————————
#问题2：
#3-1
#查找类
class(Inf) # 用class()函数查找类
class(NA)
class(NaN)
#查找类型
typeof(Inf) # 用typeof()函数查找类型
typeof(NA)
typeof(NaN)
#查找模式
mode(Inf) # 用mode()函数查找模式
mode(NA)
mode(NaN)
#查找存储模式
storage.mode(Inf) # 用storage.mode()函数查找存储模式
storage.mode(NA)
storage.mode(NaN)

#3-2
x<- sample(c("dog","cat","dolphin", "hamster","goldfish"), 100,replace=TRUE)#  从四个宠物名里随机生成100个，允许重复
head(x)# 显示所得的前几个宠物名
table(x)# 所有宠物名出现的次数

#3-3
apple<-1# 创建一些以水果命名的变量
banana<-c("a","b","ab")
pear<-"ba"
lemon<-"a"
ls(pattern = "a")# 列出用户工作区中所有包含字母“a”的变量。
————————————————————————————————————
#问题3：
#4-1、用seq()函数：seq.int(0,1.25,0.25)
#4-2、用names()函数或在赋值时直接命名
#4-3、①正整数索引返回指定位置的元素。
#     ②负整数索引会删除指定位置的元素
#     ③用逻辑值索引会返回对应位置为TRUE的元素
#     ④元素索引会返回每个名字对应的向量
#4-4、72
#4-5、用%*%
————————————————————————————————————
#问题4
(1)x<-seq.int(11,50,3)# 创建一个从11到50，步长为3的向量
   x-c(2,3)# 将向量x减去向量c(2,3) 
(2)x<-seq.int(1.1,4,20)# 创建一个从1.1到4，步长为20的向量
   x*c(4,5,8,9)# 将向量x乘向量c(4,5,8,9)
(3)x<-c(1,2,4,6)# 创建向量(1,2,4,6)
   y<-c(8,0,-1,-4)# 创建向量(8,0,-1,-4)
   x+y# 计算c(1,2,4,6)和c(8,0,-1,-4)的加减乘
   x-y
 x*y
   x/y
————————————————————————————————————
#问题5
#4-1
x<-c(1:50)*(c(1:50)+1)/2# 创建一个包含前50个三角形数的序列x
names(x)<-letters[1:15]# 使用前15个小写的英文字母 来给向量x命名。
x[c("a","e","i","o","u")]# 选择命名为元音的三角数。

#4-2
x<-c(11:0,1:11)# 创建一个序列10到0到11的序列x
diag(x)# 用x创建一个23×23的矩阵
————————————————————————————————————
#问题6
#5-1、长度为3# 用length()函数可得
#5-2、在使用formals()函数时
#5-3、可以使用data.frame函数或row.names函数创建数据框
#5-4、创建数据框时，列名必须是唯一且有效的变量名称，此功能可通过data.frame传入check.names=FALSE关闭
#5-5、可以用cbind或rbind()函数进行按行合并或按列合并
————————————————————————————————————
#问题7
#5-1、
x<-0:99# 创建一个0到99的序列x
y<-sqrt(x)# 将x中的元素开平方
z<-y==floor(y)# 将y中为整数的元素筛选出来并存入a中
a<-x[z]
group<-cut(a,seq.int(min(x),max(x),10),include.lowest = TRUE,right = FALSE)# 将x中的元素均分成10组
split(a,group)# 将a放入group中

#5-2
x<-data.frame(iris)# 创建序列x并将iris的数据集放入
x# 显示x
mean(x[ ,1])# 分别求出x中每一列的平均值
mean(x[ ,2])
mean(x[ ,3])
mean(x[ ,4])

#5-3
beaver1 $ id<-1# 使用美元符号运算符$为beaver1数据集添加一列名为id的列，其值全部为1
beaver2 $ id<-2# 使用美元符号运算符$为beaver2数据集添加一列名为id的列，其值全部为2
x<-rbind(beaver1,beaver2)# 使用rbind()函数垂直拼接beaver1和beaver2的数据框
subset(x,activ>0)# 用subset()函数找到序列下x中所有活跃着的海狸的子集









